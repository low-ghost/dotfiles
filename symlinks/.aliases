countdown() {
   date1=$((`date +%s` + $1)); 
   while [ "$date1" -ne `date +%s` ]; do 
     echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
     sleep 0.1
   done
   notify-send 'countdown finished'
}

dstopall() { docker stop $(docker ps -a -q) }
drmall() { docker rm $(docker ps -a -q) }

dbuild() {
  dir=${PWD##*/}
  docker build -t ${1-$dir} .
}

whatsonport() { sudo netstat -tulnap | grep :$1 }

addalias() {
  fc -ln -l >> ~/.aliases && vim -c 'startinsert' + ~/.aliases
}

encjson() { ejson encrypt $1 }

decjson() { ejson decrypt secrets/$1.json | tee secrets/t.json && mv secrets/t.json secrets/$1.json }

dockerlink() { docker run -it --link $1:postgres --rm postgres sh -c 'exec psql -h "$POSTGRES_PORT_5432_TCP_ADDR" -p "$POSTGRES_PORT_5432_TCP_PORT" -U exm-app-development exm-development' }

clip() { "$1" | xclip -sel clip }

tmuxa() { tmux -2 attach -t `echo $1 | cut -d ":" -f 1` }
_tmuxa_completion() {
  tmux ls | awk '{print $1$2"-"$3":"$5"-"$6"-"$7}'
}
_tmuxa () {
  compadd -S '' `_tmuxa_completion`
}
compdef _tmuxa tmuxa

his() {
  if [ -z "$1" ]
    then
        history
    else
        history | grep "$@"
    fi
}
_his_completion () {
  grep --help
}
_his () {
  compadd -S '' `_his_completion`
}
compdef _his his

alias eali='vim ~/.aliases'
alias init= '. ~/.xcaperc'
alias ..='cd ..'
compdef _.. ..='cd ..'
alias ...='cd ../..'
compdef _... ...='cd ../..'
alias ....='cd ../../..'
compdef _.... ....='cd ../../..'
alias ezsh='vim ~/.zshrc'
alias dc='docker-compose'
alias dcs='docker-compose stop'
alias ds='docker stop'
compdef _ds ds='docker stop'
alias dps='docker ps'
alias nvmc='nvm current'
alias nvmu='nvm use'
alias nvma='nvm alias'
alias nvmi='nvm install'
alias noden='node --es_staging --harmony_destructuring --harmony_default_parameters'
alias nlo='nvm exec new node --es_staging --harmony_destructuring --harmony_default_parameters ~/js/_'
alias nvlo='NODE_NO_READLINE=1 rlwrap -P "const [lo, fp] = [require(\"lodash\"), require(\"lodash-fp\")];" node --es_staging --harmony_destructuring --harmony_default_parameters'
alias ncw='nvm exec new node --es_staging --harmony_destructuring --harmony_default_parameters ~/js/cw'
alias gstai='git stash --keep-index' # stash, but keep files
alias gstain='git stash --keep-index' # same, but more fun

gun() { git reset HEAD $@ ;}
_gitunadd_completion() {
  git diff --cached --name-only --diff-filter=A
}
_gitunadd () {
  compadd -S '' `_gitunadd_completion`
}
compdef _gitunadd gun

alias apt='sudo apt-get'
compdef _apt apt='sudo apt-get'
alias apti='sudo apt-get install'
compdef _apti apti='sudo apt-get install'

gi() { curl -sL https://www.gitignore.io/api/`echo $@ | sed s/" "/,/g` ;}
_gitignoreio_completion() {
  curl -sL https://www.gitignore.io/api/list | tr "," "\n"
}
_gitignoreio () {
  compset -P '*,'
  compadd -S '' `_gitignoreio_completion`
}
compdef _gitignoreio gi
calc() { echo $1 | bc -l }

alias pgdevstart='docker run -d -p 5432:5432 postgres'
alias pgdev='psql -U postgres -h localhost' 

#w/ export dependencies
alias pgexm='psql -U $PG_USER_EXM -h $PG_HOST_EXM -d $PG_DB_EXM'
